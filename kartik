BISECTION METHOD
f[x_]:= x^3+4x^2-10;
a=1;
b=2;
e=0.001;
Nmax=7;
If[f[a]*f[b]>0,
Print["These values don't satisfy the condition of Bisection method"],
For[i=1,i<=Nmax,i++,c=(a+b)/2;
If[Abs[(b-a)/2]<e,Return[c],
Print[i,"th iteration value is:",c];
Print["Estimated error in",i,"th iteration is: ",(b-a)/2];
If[f[a]*f[c]<0,b=c,a=c]]]]
Print["The approximate root is: ", N[c]]
Plot[f[x],{x,1,2}]

NEWTON RAPHSON METHOD
f[x_]:=x^4-x-10;
x0 = 2;
e = 5 * 10^(-5);
Nmax = 5;
For[n=1,n<=Nmax,n++,
xn = N[xn-1 -f[xn-1]/f'[xn-1]];
If[Abs[xn - xn-1]<e,Return[xn]];
Print[n,"th iteration value is:", xn];
Print["Estimated error in ", n, "th iteration is: ", Abs[xn - xn-1]]];
Print["The approximate root is:", xn]
Plot[f[x],{x,-1,3}]

SECANT METHOD
ClearAll;
SecantMethod[x0_, x1_, m_]:= 
Module[{p0 = N[x0],p1=N[x1],k = 0},
While[k<m,
p2 = p1 - (f[p1]*(p1-p0))/(f[p1]-f[p0]);
p0=p1;
p1=p2;
k=k+1;
Print["Value at",k,"th iteration is = ",NumberForm[p2,16]];
]; 
];
SecantMethod[0, 1, 8];
f[x_]:=Cos[x]-x*Exp[x];

LU DECOMPOSITION
A={{3,2,7},{2,3,1},{3,4,1}};
MatrixForm[A]
b={4,5,7};
{lu,p,c}=LUDecomposition[A]
L=lu SparseArray[{i_,j_}/; j<i->1,{3,3}]+IdentityMatrix[3];
MatrixForm[L]
U=lu SparseArray[{i_,j_}/;j>=i->1,{3,3}];
MatrixForm[U]
L.{a,v,w}==b
sol1=Solve[%,{a,v,w}]
d=MatrixForm[L.U]

V={4,-1,6};
U.{x,y,z}==V
sol2=Solve[%,{x,y,z}]//N

GAUSS JACOBI METHOD / GAUSS SIEDEL METHOD
n=3;
A={{27,6,-1},{6,15,2},{1,1,54}};
MatrixForm[A]
x={0,0,0}
b={85,72,110}
For[k=1,k<=5,k++,
For[i=1,i<=n,i++,
x[[i]]=(b[[i]]-Sum[A[[i,j]]*x[[j]],{j,1,i-1}]-
Sum[A[[i,j]]*x[[j]],{j,i+1,n}])/A[[i,i]]];
For[m=1,m<=n,m++,x[[m]]=N[x[[m]]]]]
For[p=1,p<=n,p++,Print["x[", p, "]=", x[[p]]]]

